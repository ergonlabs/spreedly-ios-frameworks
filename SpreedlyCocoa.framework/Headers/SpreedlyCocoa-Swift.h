// Generated by Apple Swift version 5.2.4 (swiftlang-1103.0.32.9 clang-1103.0.32.53)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import PassKit;
@import QuartzCore;
@import Spreedly;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="SpreedlyCocoa",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif



@protocol SPRClient;
@class PKPaymentRequest;
@class SPRTransaction;

SWIFT_CLASS_NAMED("ApplePayHandler")
@interface SPRApplePayHandler : NSObject
- (nonnull instancetype)initWithClient:(id <SPRClient> _Nonnull)client OBJC_DESIGNATED_INITIALIZER;
- (void)startPaymentWithRequest:(PKPaymentRequest * _Nonnull)request completion:(void (^ _Nonnull)(BOOL, SPRTransaction * _Nullable))completion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class PKPaymentAuthorizationController;
@class PKPayment;

@interface SPRApplePayHandler (SWIFT_EXTENSION(SpreedlyCocoa)) <PKPaymentAuthorizationControllerDelegate>
- (void)paymentAuthorizationController:(PKPaymentAuthorizationController * _Nonnull)controller didAuthorizePayment:(PKPayment * _Nonnull)payment completion:(void (^ _Nonnull)(PKPaymentAuthorizationStatus))completion;
- (void)paymentAuthorizationControllerDidFinish:(PKPaymentAuthorizationController * _Nonnull)controller;
@end







@class NSCoder;
enum SPRValidationState : NSInteger;

/// A UITextField which is aware of its validation state and updates its appearance commensurately.
SWIFT_CLASS_NAMED("ValidatedTextField")
@interface SPRValidatedTextField : UITextField
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
/// Gets the current validation state.
@property (nonatomic, readonly) enum SPRValidationState validationState;
/// The reason this control is in error.
@property (nonatomic, copy) NSString * _Nullable reason;
/// Puts the control into an undetermined validation state.
- (void)clearValidation;
/// Puts the control into an error state.
/// \param reason A human readable reason for the error.
///
- (void)setErrorWithBecause:(NSString * _Nonnull)reason;
/// Puts the control into a valid state.
- (void)setValid;
@end

@protocol SPRSecureOpaqueString;

/// Allows this control to return it’s text property as a SpreedlySecureOpaqueString.
/// Recommended for use with card verification value.
SWIFT_CLASS_NAMED("SecureTextField")
@interface SPRSecureTextField : SPRValidatedTextField
/// Returns the text value of this field as a SpreedlySecureOpaqueString.
- (id <SPRSecureOpaqueString> _Nullable)secureText SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end


/// Handles credit card number input from the user.
/// Only accepts numbers. When input matches a known card brand pattern, input will be limited to the max allowable
/// characters for that brand and shows the brand icon at the trailing edge. Formats the input into number groups
/// while the user types. Unless editing, the field’s content will be masked with the <code>maskCharacter</code> showing only
/// the last four digits.
SWIFT_CLASS_NAMED("CreditCardNumberTextField")
@interface SPRCreditCardNumberTextField : SPRSecureTextField
/// Character used for masking initial numbers. Default is “*” (asterisk).
@property (nonatomic, copy) IBInspectable NSString * _Nonnull maskCharacter;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (id <SPRSecureOpaqueString> _Nullable)secureText SWIFT_WARN_UNUSED_RESULT;
@end


@interface SPRCreditCardNumberTextField (SWIFT_EXTENSION(SpreedlyCocoa))
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField reason:(UITextFieldDidEndEditingReason)reason;
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("ExpirationDate")
@interface SPRExpirationDate : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL_NAMED("ExpirationDateProvider")
@protocol SPRExpirationDateProvider
- (SPRExpirationDate * _Nullable)expirationDate SWIFT_WARN_UNUSED_RESULT;
@end


/// A <code>UITextField</code> with <code>UIPickerView</code> spinners allowing the user to select a month and year.
/// The month defaults to <code>01</code> and the year defaults to the current year.
SWIFT_CLASS_NAMED("ExpirationPickerField")
@interface SPRExpirationPickerField : SPRValidatedTextField
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)showPicker;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


@interface SPRExpirationPickerField (SWIFT_EXTENSION(SpreedlyCocoa)) <SPRExpirationDateProvider>
- (SPRExpirationDate * _Nullable)expirationDate SWIFT_WARN_UNUSED_RESULT;
@end

@class UIPickerView;

@interface SPRExpirationPickerField (SWIFT_EXTENSION(SpreedlyCocoa)) <UIPickerViewDataSource>
- (NSInteger)numberOfComponentsInPickerView:(UIPickerView * _Nonnull)pickerView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)pickerView:(UIPickerView * _Nonnull)pickerView numberOfRowsInComponent:(NSInteger)component SWIFT_WARN_UNUSED_RESULT;
@end


@interface SPRExpirationPickerField (SWIFT_EXTENSION(SpreedlyCocoa)) <UIPickerViewDelegate>
- (NSString * _Nullable)pickerView:(UIPickerView * _Nonnull)pickerView titleForRow:(NSInteger)row forComponent:(NSInteger)component SWIFT_WARN_UNUSED_RESULT;
- (void)pickerView:(UIPickerView * _Nonnull)pickerView didSelectRow:(NSInteger)row inComponent:(NSInteger)component;
@end

@class SPRClientConfiguration;
@class SPRPaymentMethodItem;
@class SPRSelectedPaymentMethod;
@class PaymentMethodInfo;
enum SPRPresentationStyle : NSInteger;
@class UIView;

/// ExpressBuilder is the entrypoint for the Express UI workflow.
/// Create an instance of this class, optionally set properties to configure Express UI behavior, and finally call
/// <code>buildViewController()</code> to get a <code>UIViewController</code> ready to show.
/// <h3>Example</h3>
/// \code
/// var builder = ExpressBuilder()
/// builder.didSelectPaymentMethod = { item in
///     print("User wants to use a payment method with token: \(item.token)")
/// }
/// let controller = builder.buildViewController()
/// navigationController?.show(controller, sender: self)
///
/// \endcode
SWIFT_CLASS_NAMED("ExpressBuilder")
@interface SPRExpressBuilder : NSObject
/// A ClientConfiguration contains the environment key necessary to create payment methods with Spreedly.
/// This can be set explicitly. If it is not, the Express system will look for a <code>Spreedly-env.plist</code> file
/// in the main bundle for the environment key value under <code>ENV_KEY</code>.
@property (nonatomic, strong) SPRClientConfiguration * _Nullable clientConfiguration;
/// Default: true. Allow the user to add new card payment methods.
@property (nonatomic) BOOL allowCard;
/// Default: false. Allow the user to add new bank account payment methods.
@property (nonatomic) BOOL allowBankAccount;
/// Default: true. Allow users to select the Apple Pay payment method. When true, the <code>paymentRequest</code> property
/// must also be set.
@property (nonatomic) BOOL allowApplePay;
/// A list of payment methods available for the user to select. Set if providing
/// any previously stored payment methods.
@property (nonatomic, copy) NSArray<SPRPaymentMethodItem *> * _Nullable paymentMethods;
/// Called after the user selects a payment method. When called, the controller returned from
/// <code>buildViewController</code> should be popped/dismissed.
@property (nonatomic, copy) void (^ _Nullable didSelectPaymentMethod)(SPRSelectedPaymentMethod * _Nonnull);
/// Set this to provide a full name on the payment method creation forms and to provide
/// name, company, email, address, shipping address, and metadata information to Spreedly
/// when a payment method is created. Values in this property will be used when creating a credit card
/// or bank account payment method.
@property (nonatomic, strong) PaymentMethodInfo * _Nullable defaultPaymentMethodInfo;
/// Set this to provide a full name on the form and to provide
/// name, company, email, address, shipping address, and metadata information to Spreedly when the payment method
/// is created. When this property is set, <code>defaultPaymentMethodInfo</code> will be ignored.
@property (nonatomic, strong) CreditCardInfo * _Nullable defaultCreditCardInfo;
/// Set this to provide a full name, bank account type, and bank account holder type on the form and to provide
/// name, company, email, address, shipping address, and metadata information to Spreedly when the payment method
/// is created. When this property is set, <code>defaultPaymentMethodInfo</code> will be ignored.
@property (nonatomic, strong) BankAccountInfo * _Nullable defaultBankAccountInfo;
/// Set this to provide a name, company, email, address, shipping address, and metadata information to Spreedly
/// when the payment method is created. When this property is set, <code>defaultPaymentMethodInfo</code> will be ignored.
@property (nonatomic, strong) PaymentMethodInfo * _Nullable defaultApplePayInfo;
/// Required when offering Apple Pay. Provides values to the Apple Pay dialog.
/// <h3>Example</h3>
/// \code
/// let request = PKPaymentRequest()
/// request.merchantIdentifier = "merchant.com.your_company.app"
/// request.countryCode = "US"
/// request.currencyCode = "USD"
/// request.supportedNetworks = [.amex, .discover, .masterCard, .visa]
/// request.merchantCapabilities = [.capabilityCredit, .capabilityDebit]
/// request.paymentSummaryItems = [
///     PKPaymentSummaryItem(label: "Amount", amount: NSDecimalNumber(string: "322.38"), type: .final),
///     PKPaymentSummaryItem(label: "Tax", amount: NSDecimalNumber(string: "32.24"), type: .final),
///     PKPaymentSummaryItem(label: "Total", amount: NSDecimalNumber(string: "354.62"), type: .final)
/// ]
///
/// let builder = ExpressBuilder()
/// builder.paymentRequest = request
///
/// \endcode
@property (nonatomic, strong) PKPaymentRequest * _Nullable paymentRequest;
/// Default: <code>.withinNavigationView</code>. When showing the Express UI within an existing <code>UINavigationController</code>,
/// set this to <code>.withinNavigationView</code>. When it is meant to appear separately, such as within a modal,
/// set this to <code>.asModal</code> so it will provide its own <code>UINavigationController</code>.
@property (nonatomic) enum SPRPresentationStyle presentationStyle;
/// Appears at the top of the payment selection screen. Also set <code>paymentSelectionHeaderHeight</code> when
/// using this property.
@property (nonatomic, strong) UIView * _Nullable paymentSelectionHeader;
/// Default: zero. Set this to more than zero when using the <code>paymentSelectionHeader</code>.
@property (nonatomic) CGFloat paymentSelectionHeaderHeight;
/// Appears after all other controls on the payment selection screen. Also set <code>paymentSelectionFooterHeight</code> when
/// using this property.
@property (nonatomic, strong) UIView * _Nullable paymentSelectionFooter;
/// Default: zero. Set this to more than zero when using the <code>paymentSelectionFooter</code>.
@property (nonatomic) CGFloat paymentSelectionFooterHeight;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, SPRPresentationStyle, "PresentationStyle", open) {
/// Use this if the ExpressController will be part of an existing UINavigationController.
  SPRPresentationStyleWithinNavigationView = 0,
/// Use this if the ExpressController will be shown own its own. The returned controller will be a
/// UINavigationController wrapping the ExpressController.
  SPRPresentationStyleAsModal = 1,
};


SWIFT_CLASS_NAMED("ExpressContext")
@interface SPRExpressContext : NSObject
@property (nonatomic, strong) SPRClientConfiguration * _Nullable clientConfiguration;
@property (nonatomic, copy) NSArray<SPRPaymentMethodItem *> * _Nullable paymentMethods;
@property (nonatomic) BOOL allowCard;
@property (nonatomic) BOOL allowBankAccount;
@property (nonatomic) BOOL allowApplePay;
@property (nonatomic, copy) void (^ _Nullable didSelectPaymentMethod)(SPRSelectedPaymentMethod * _Nonnull);
@property (nonatomic, strong) PaymentMethodInfo * _Nullable paymentMethodDefaults;
@property (nonatomic, strong) CreditCardInfo * _Nullable creditCardDefaults;
@property (nonatomic, strong) BankAccountInfo * _Nullable bankAccountDefaults;
@property (nonatomic, strong) PaymentMethodInfo * _Nullable applePayDefaults;
@property (nonatomic, strong) PKPaymentRequest * _Nullable paymentRequest;
@property (nonatomic, strong) UIView * _Nullable paymentSelectionHeader;
@property (nonatomic) CGFloat paymentSelectionHeaderHeight;
@property (nonatomic, strong) UIView * _Nullable paymentSelectionFooter;
@property (nonatomic) CGFloat paymentSelectionFooterHeight;
@property (nonatomic, readonly, copy) NSString * _Nullable fullNamePaymentMethod;
@property (nonatomic, readonly, copy) NSString * _Nullable fullNameCreditCard;
@property (nonatomic, readonly, copy) NSString * _Nullable fullNameBankAccount;
@property (nonatomic, readonly, copy) NSString * _Nullable fullNameApplePay;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Contains basic information about a payment method.
SWIFT_CLASS_NAMED("PaymentMethodItem")
@interface SPRPaymentMethodItem : NSObject
/// A very short description of the payment method displayable to the customer.
@property (nonatomic, readonly, copy) NSString * _Nonnull shortDescription;
/// Spreedly’s payment method token.
@property (nonatomic, readonly, copy) NSString * _Nonnull token;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface SPRPaymentMethodItem (SWIFT_EXTENSION(SpreedlyCocoa))
@property (nonatomic, readonly) enum SPRPaymentMethodType type;
@end

@protocol SPRSecureFormDelegate;
@class UISegmentedControl;
@class UISwitch;

/// Coordinates with form controls to collect user input, manage API calls with Spreedly, and validate inputs.
/// Does not change presentation directly.
/// <h1>Use with a Storyboard</h1>
/// One way to use the <code>SecureForm</code> in a Storyboard is to set it as the custom class for your ViewController’s view.
/// Under that view, add all your form elements (e.g. card number, cardholder name, verification value, expiration date,
/// address fields, email address, etc), then connect those elements to the <code>@IBOutlet</code> properties on the SecureForm.
/// Finally, connect your call-to-action button to the SecureForm’s create methods (either
/// <code>createCreditCardPaymentMethod</code> or <code>createBankAccountPaymentMethod</code>) to tell the form to gather the field values
/// and attempt payment method creation with Spreedly.
SWIFT_CLASS_NAMED("SecureForm")
@interface SPRSecureForm : UIView
@property (nonatomic, weak) id <SPRSecureFormDelegate> _Nullable delegate;
/// Provides a set of default values used to populate any credit card fields not set by the form.
/// When set, <code>SecureForm.paymentMethodDefaults</code> will be ignored.
@property (nonatomic, strong) CreditCardInfo * _Nullable creditCardDefaults;
/// Provides a set of default values used to populate any bank account fields not set by the form.
/// When set, <code>paymentMethodDefaults</code> will be ignored.
@property (nonatomic, strong) BankAccountInfo * _Nullable bankAccountDefaults;
/// Provides a set of default values used to populate any fields not set by the form.
@property (nonatomic, strong) PaymentMethodInfo * _Nullable paymentMethodDefaults;
@property (nonatomic, weak) IBOutlet SPRValidatedTextField * _Nullable fullName;
@property (nonatomic, weak) IBOutlet SPRValidatedTextField * _Nullable firstName;
@property (nonatomic, weak) IBOutlet SPRValidatedTextField * _Nullable lastName;
@property (nonatomic, weak) IBOutlet UITextField * _Nullable email;
@property (nonatomic, weak) IBOutlet UITextField * _Nullable company;
@property (nonatomic, weak) IBOutlet SPRCreditCardNumberTextField * _Nullable creditCardNumber;
@property (nonatomic, weak) IBOutlet SPRSecureTextField * _Nullable creditCardVerificationNumber;
@property (nonatomic, weak) IBOutlet SPRValidatedTextField * _Nullable expirationDate;
@property (nonatomic, weak) IBOutlet id <SPRExpirationDateProvider> _Nullable expirationDateProvider;
@property (nonatomic, weak) IBOutlet SPRSecureTextField * _Nullable bankAccountNumber;
@property (nonatomic, weak) IBOutlet SPRValidatedTextField * _Nullable bankAccountRoutingNumber;
@property (nonatomic, weak) IBOutlet UISegmentedControl * _Nullable bankAccountType;
@property (nonatomic, weak) IBOutlet UISegmentedControl * _Nullable bankAccountHolderType;
@property (nonatomic, weak) IBOutlet UITextField * _Nullable address1;
@property (nonatomic, weak) IBOutlet UITextField * _Nullable address2;
@property (nonatomic, weak) IBOutlet UITextField * _Nullable city;
@property (nonatomic, weak) IBOutlet UITextField * _Nullable state;
@property (nonatomic, weak) IBOutlet UITextField * _Nullable zip;
@property (nonatomic, weak) IBOutlet UITextField * _Nullable country;
@property (nonatomic, weak) IBOutlet UITextField * _Nullable phoneNumber;
@property (nonatomic, weak) IBOutlet UISwitch * _Nullable sameAddressForShipping;
@property (nonatomic, weak) IBOutlet UITextField * _Nullable shippingAddress1;
@property (nonatomic, weak) IBOutlet UITextField * _Nullable shippingAddress2;
@property (nonatomic, weak) IBOutlet UITextField * _Nullable shippingCity;
@property (nonatomic, weak) IBOutlet UITextField * _Nullable shippingState;
@property (nonatomic, weak) IBOutlet UITextField * _Nullable shippingZip;
@property (nonatomic, weak) IBOutlet UITextField * _Nullable shippingCountry;
@property (nonatomic, weak) IBOutlet UITextField * _Nullable shippingPhoneNumber;
/// Combines data from the defaults (<code>creditCardDefaults</code> if set otherwise <code>paymentMethodDefaults</code>) with
/// the form’s values and attempts to create a credit card payment method.
/// If the create call returns any field validation errors, those fields are notified of the errors.
/// If successful, calls <code>delegate.spreedly(secureForm:success:)</code> with the successful <code>Transaction</code>.
- (IBAction)createCreditCardPaymentMethodWithSender:(UIView * _Nonnull)sender;
/// Combines data from the defaults (<code>bankAccountDefaults</code> if set otherwise <code>paymentMethodDefaults</code>) with
/// the form’s values and attempts to create a credit card payment method.
/// If the create call returns any field validation errors, those fields are notified of the errors.
/// If successful, calls <code>delegate.spreedly(secureForm:success:)</code> with the successful <code>Transaction</code>.
- (IBAction)createBankAccountPaymentMethodWithSender:(UIView * _Nonnull)sender;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// A set of methods that you use to receive successfully created payment methods from Spreedly and provide
/// client configuration for that communication.
SWIFT_PROTOCOL_NAMED("SecureFormDelegate")
@protocol SPRSecureFormDelegate
/// Tells the delegate that a payment methods was successfully created.
- (void)spreedlyWithSecureForm:(SPRSecureForm * _Nonnull)secureForm success:(SPRTransaction * _Nonnull)success;
@optional
/// Tells the delegate that a network call will be made. Useful for starting an activity spinner.
- (void)willCallSpreedlyWithSecureForm:(SPRSecureForm * _Nonnull)secureForm;
/// Tells the delegate that a network call completed. Useful for stopping an activity spinner.
- (void)didCallSpreedlyWithSecureForm:(SPRSecureForm * _Nonnull)secureForm;
/// Returns a <code>ClientConfiguration</code> to use rather than using the values from <code>Spreedly-env.plist</code>
/// from the main bundle.
- (SPRClientConfiguration * _Nullable)clientConfigurationWithSecureForm:(SPRSecureForm * _Nonnull)secureForm SWIFT_WARN_UNUSED_RESULT;
@end


@class SPRPaymentMethodResultBase;

/// Contains data about the payment method selected by the user from the <code>PaymentSelectionViewController</code>.
SWIFT_CLASS_NAMED("SelectedPaymentMethod")
@interface SPRSelectedPaymentMethod : NSObject
/// Spreedly’s payment method token
@property (nonatomic, readonly, copy) NSString * _Nonnull token;
/// If the payment method was created by the user before selection, this will contain the payment method object.
@property (nonatomic, strong) SPRPaymentMethodResultBase * _Nullable paymentMethod;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface SPRSelectedPaymentMethod (SWIFT_EXTENSION(SpreedlyCocoa))
/// The payment method type
@property (nonatomic, readonly) enum SPRPaymentMethodType type;
@end














@interface UISegmentedControl (SWIFT_EXTENSION(SpreedlyCocoa))
@property (nonatomic, copy) IBInspectable NSString * _Nullable xibLocKeys;
@end






@interface UITextField (SWIFT_EXTENSION(SpreedlyCocoa))
@property (nonatomic, copy) IBInspectable NSString * _Nullable xibPlaceholderLocKey;
@end



@interface SPRValidatedTextField (SWIFT_EXTENSION(SpreedlyCocoa)) <UITextFieldDelegate>
@property (nonatomic, strong) id <UITextFieldDelegate> _Nullable delegate;
/// Any time the user causes the text to change, reset the validation state.
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, SPRValidationState, "ValidationState", open) {
  SPRValidationStateNone = 0,
  SPRValidationStateValid = 1,
  SPRValidationStateError = 2,
};

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
